# Generated by Django 4.2.1 on 2023-06-26 19:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Tipo de documento',
                'verbose_name_plural': 'Tipos de documentos',
                'db_table': 'document_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_rol', models.CharField(max_length=20, verbose_name='Nombre rol')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'rol',
                'ordering': ['name_rol'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_profile', models.ImageField(upload_to='media', verbose_name='Imagen del usuario')),
                ('birthdate', models.DateField(verbose_name='Fecha de nacimiento')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('P', 'Prefiero no decir')], default='', max_length=9, verbose_name='Genero')),
                ('telephone_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000000000, message='El número debe tener 10 dígitos'), django.core.validators.MaxValueValidator(9999999999, message='El número debe tener 10 dígitos')], verbose_name='Telefono')),
                ('allergies', models.CharField(blank=True, max_length=250, verbose_name='Alergias')),
                ('disability', models.CharField(blank=True, max_length=250, verbose_name='Dicapacidad')),
                ('state', models.BooleanField(default=True, verbose_name='Estado del usuario')),
                ('date_create', models.DateField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('num_document', models.IntegerField(validators=[django.core.validators.MaxValueValidator(9999999999)], verbose_name='Número de documento')),
                ('file', models.FileField(upload_to='media/', verbose_name='Documento Consentimiento')),
                ('file_v', models.FileField(upload_to='media/', verbose_name='Documento Visto Medico')),
                ('file_f', models.FileField(upload_to='media/', verbose_name='Documento Fotocopia Del Documento')),
                ('cod_rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rol', verbose_name='Rol')),
                ('type_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.documenttype', verbose_name='Tipo de documento')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'user',
                'ordering': ['date_create'],
            },
        ),
    ]
